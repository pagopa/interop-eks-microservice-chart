{{- if eq .Values.techStack "frontendold" }}
{{- if or .Values.frontend.nginx .Values.frontend.additionalAssets }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
data:
  {{- if and .Values.frontend.nginx (index .Values.frontend.nginx "default.conf") }}
    default.conf:
      {{- toYaml (index .Values.frontend.nginx "default.conf")  | nindent 4 }}
  {{- end }}
  {{- if and .Values.frontend .Values.frontend.additionalAssets }}
  {{- range $key, $val := .Values.frontend.additionalAssets }}
    {{ $key }}:
      {{- toYaml $val | nindent 4 }}
  {{- end }}
  {{- end }}
  {{- if .Values.configmap -}}
    {{- range $key, $val := .Values.configmap }}
    {{ $key }}: {{ include "interop-eks-microservice-chart.render-template" (dict "value" $val "context" $) | quote }}
    {{- end }}
  {{- end }}
{{- end }}
{{- else if eq .Values.techStack "frontend" }}
{{- if or .Values.frontend.nginx .Values.frontend.additionalAssets }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
data:
  {{- if and .Values.frontend.nginx (index .Values.frontend.nginx "default.conf") }}
    default.conf:
      {{- toYaml (index .Values.frontend.nginx "default.conf")  | nindent 4 }}
  {{- end }}
  {{- if and .Values.frontend .Values.frontend.additionalAssets }}
  {{- range $key, $val := .Values.frontend.additionalAssets }}
    {{/* $key is env.js */}}
    {{- $windowVar := dict }}
    {{ $key }}: |-
      {{- /* json_key = window.pagopa_env */ -}}
      {{- range $json_key, $json_val := $val }}
        {{- range $subKey, $subValue := $json_val }}
          {{- if eq $subKey "fromConfigmaps" }}
            {{- /* fromConfigmapsSubKey is a sub key in fromConfigmaps */ -}}
            {{- /* fromConfigmapsSubValue is a complex value in the format CONFIGMAP_NAME.CONFIGMAP_KEY */ -}}
            {{- range $fromConfigmapsSubKey, $fromConfigmapsSubValue := $subValue }}
              {{- $configmapAddress := mustRegexSplit "\\." $fromConfigmapsSubValue 2 }}
              {{- $configmapName := index $configmapAddress 0 }}
              {{- $configmapKey := index $configmapAddress 1 }}
              {{- $configMapData := (lookup "v1" "ConfigMap" $.Values.namespace $configmapName) }}
              {{- if $configMapData }}
                {{- $configMapValue := (index (index $configMapData "data") $configmapKey) }}
                {{- if $configMapValue }}
                  {{- $windowVar = merge $windowVar (dict $fromConfigmapsSubKey $configMapValue) }}
                {{- end -}}
              {{- end -}}
            {{- end }}
          {{- else }}
            {{- $windowVar = merge $windowVar (dict $subKey $subValue) -}}
          {{- end }}
        {{- end }}
        {{- $json_key | nindent 6 }} = {{ $windowVar | toPrettyJson | nindent 8 }} 
      {{- end }}
  {{- end }}
  {{- end }}
  {{- if .Values.configmap -}}
    {{- range $key, $val := .Values.configmap }}
    {{ $key }}: {{ include "interop-eks-microservice-chart.render-template" (dict "value" $val "context" $) | quote }}
    {{- end }}
  {{- end }}
{{- end }}
{{- else if .Values.configmap -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.name }}
  namespace: {{ .Values.namespace }}
data:
  {{- range $key, $val := .Values.configmap }}
  {{ $key }}: {{ include "interop-eks-microservice-chart.render-template" (dict "value" $val "context" $) | quote }}
  {{- end }}
{{- end }}
