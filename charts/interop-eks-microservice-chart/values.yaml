# Default values for interop-eks-microservice-chart.

# -- Name of the service that will be deployed on K8s cluster
name:

# -- Namespace hosting the service that will be deployed on K8s cluster
namespace:

# -- (enum) Defines the technology used to develop the container. The following values are allowed: [ "nodejs", "scala", "frontend"]
techStack: 

# -- (int) Number of desired replicas for the service being deployed
replicas: 

# -- ServiceAccount roleARN
roleArn:

# -- Service annotations
healthcheck:
  path:
  port:
  successCodes:

# -- Pod securityContext del Pod, used in Deployment yaml
securityContext:
  runAsUser: 1001
  allowPrivilegeEscalation: false

image:
  imagePullPolicy: Always
  repositoryPrefix:
  tag:
  digest:

# -- K8s container resources requests and limits
resources:
  requests:
    cpu:
    memory:
  limits:
    cpu:
    memory:

service:
  # -- Enable K8s Service deployment generation
  create: false
  # -- (enum) K8s Service type, allowed values: [ "ClusterIP", "NodePort" ]
  type: "ClusterIP"
  monitoringPort: 9095
  managementPort: 8558
  containerPort:
  
  targetPort: "http"
  # -- Enable container monitoring port
  enableMonitoring: true
  # -- Enable container management port
  enableManagement: true

ingress:
  # -- Enable K8s Ingress deployment generation
  enable: false
  className: alb
  groupName: "interop-be"

deployment:
  # -- (object) List of environment variables for a container, specifying a value directly for each named variable
  env: 
  # -- (object) List of environment variables for a container, specifying a key from a Configmap for each named variable (k8s equivalent of envFrom.configMapRef)
  envFromConfigmaps: 
  # -- (object) List of environment variables for a container, specifying a key from a Secret for each named variable (k8s equivalent of envFrom.secretRef)
  envFromSecrets: 
  # -- (object) List of pod fields used as values for environment variablesenvironment variables for a container, specifying a key from a Secret for each named variable (k8s equivalent of env.valueFrom.fieldRef.fieldPath)
  envFromFieldRef: 
  flywayInitContainer:
    create: false
    # -- Configmap with migrations
    migrationsConfigmap:
    # -- (object) List of environment variables for a container, specifying a value directly for each named variable
    env: 
    # -- (object) List of environment variables for a container, specifying a key from a Configmap for each named variable (k8s equivalent of envFrom.configMapRef)
    envFromConfigmaps: 
    # -- (object) List of environment variables for a container, specifying a key from a Secret for each named variable (k8s equivalent of envFrom.secretRef)
    envFromSecrets: 
    # -- (object) List of pod fields used as values for environment variablesenvironment variables for a container, specifying a key from a Secret for each named variable (k8s equivalent of env.valueFrom.fieldRef.fieldPath)
    envFromFieldRef: 
