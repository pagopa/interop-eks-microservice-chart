name: "frontend-service"
namespace: "test-namespace"
techStack: "frontend"

service:
  create: true
  portName: httpPort
  containerPort: 80
  targetPort: 80
  healthcheck:
    path: "/ui"
    successCodes: "301"

serviceAccount:
  roleArn: "arn:aws:iam::000000000:role/frontend-service"

ingress:
  enable: true
  applicationPath: "/ui"
  groupName: "theGroupName"
  host: "192.168.1.2"

configmap:
  FOO: "BAR"

deployment:
  generateRolloutAnnotations: true
  replicas: 1
  image:
    repositoryPrefix: "000000000000.dkr.ecr.eu-central-1.amazonaws.com"
    imagePullPolicy: Always
    tag: latest
    digest: ""
  resources:
    requests:
      cpu: "250m"
      memory: "1Gi"
    limits:
      cpu: "250m"
      memory: "1Gi"

frontend:
  env.js:
    window.pagopa_env:
      KEY: "VALUE1"
      KEY_2: "VALUE2" # ignored
      KEY_2: "VALUE2.1"
      fromConfigmaps:
        EVENTSHORE_DB_HOST_KEY2: "common-event-store.EVENTSTORE_DB_HOST"
        EVENTSTORE_DB_HOST_KEY: "common-event-store.EVENTSTORE_DB_HOST"
        EVENTSTORE_DB_NAME_KEY: "common-event-store.EVENTSTORE_DB_NAME"
    window.pagopa_env2:
      KEY: "VALUE1"
      KEY_2: "VALUE2" # ignored
      KEY_2: "VALUE2.1"
      fromConfigmaps:
        EVENTSHORE_DB_HOST_KEY2: "common-event-store.EVENTSTORE_DB_HOST"
        EVENTSTORE_DB_HOST_KEY: "common-event-store.EVENTSTORE_DB_HOST"
        EVENTSTORE_DB_NAME_KEY: "common-event-store.EVENTSTORE_DB_NAME"
  # ignored
  tool.js:
    window.pagopa_env:
      KEY: "VALUE1"
      KEY_2: "VALUE2"
      KEY_2: "VALUE2"
      fromConfigmaps:
        EVENTSHORE_DB_HOST_KEY: "common-event-shore.EVENTSTORE_DB_HOST"
        EVENTSTORE_DB_HOST_KEY: "common-event-store.EVENTSTORE_DB_HOST"
        EVENTSTORE_DB_NAME: "common-event-store.EVENTSTORE_DB_NAME"
        AGREEMENT_OUTBOUND_TOPIC: "common-kafka.AGREEMENT_OUTBOUND_TOPIC"
        READMODEL_DB_HOST: "common-read-model.READMODEL_DB_HOST"
  nginx:
    default.conf: |-
      server {
        listen       80;
        listen  [::]:80;
        server_name  localhost;
        absolute_redirect off;

        location /ui {
            root   /usr/share/nginx/html;
            sub_filter_once off;
            sub_filter_types *;
            sub_filter **CSP_NONCE** $request_id;
            add_header Content-Security-Policy "default-src 'self'; object-src 'none'; connect-src 'self' https://test.s3.eu-central-1.amazonaws.com; script-src 'nonce-$request_id'; style-src 'self' 'unsafe-inline'; worker-src 'none'; font-src 'self'; img-src 'self' data:; base-uri 'self'";
            add_header Strict-Transport-Security "max-age=31536000";
            add_header X-Content-Type-Options "nosniff";
            add_header X-Frame-Options "SAMEORIGIN";
            add_header Referrer-Policy "no-referrer";
            rewrite /ui/index.html /ui permanent;
            try_files $uri /ui/index.html =404;
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
      }
  additionalAssets:
    - tool.js
    - env.js
