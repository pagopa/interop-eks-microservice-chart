name: "test-proces-ms"
namespace: "dev"

techStack: "nodejs"
moduleType: "process-ms"

externalValue: "externalValue"

service:
  create: true
  containerPort: 8088

serviceAccount: 
  roleArn: "arn:aws:iam::00000000:role/test-proces-ms-dev"

configmap:
  EVENTSTORE_DB_SCHEMA: "dev_test_proces_ms"
  PRODUCER_ALLOWED_ORIGINS: "IPA"
  EXTERNAL_VALUE: "{{.Values.externalValue}}"
  
deployment:
  replicas: 1
  image:
    repositoryPrefix: "000000000000.dkr.ecr.eu-central-1.amazonaws.com"
    imagePullPolicy: Always
    tag: $IMAGE_TAG_PLACEHOLDER
    digest: $IMAGE_DIGEST_PLACEHOLDER
  resources:
    limits:
      cpu: 100m
      memory: 1Gi
    requests:
      cpu: 100m
      memory: 1Gi
  livenessProbe:
    httpGet:
      path: /status
      port: http
    initialDelaySeconds: 15
    periodSeconds: 5
  readinessProbe:
    httpGet:
      path: /status
      port: http
    initialDelaySeconds: 15
    periodSeconds: 5
  flywayInitContainer: 
    create: true
    migrationsConfigmap: "test-store-migrations"
    env:
      FLYWAY_CREATE_SCHEMAS: "true"
      FLYWAY_PLACEHOLDER_REPLACEMENT: "true"
      FLYWAY_URL: "jdbc:postgresql://$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_DB)"
      POSTGRES_HOST: "{{.Values.name}}"
      POSTGRES_PORT: "{{.Values.externalValue}}"
      POSTGRES_DB: "DB"
    envFromConfigmaps:
      FROM_CONFIGMAPS: "configmap-name.configmap_key"
    envFromSecrets:
      FLYWAY_USER: "event-store.POSTGRES_USR"
      FLYWAY_PASSWORD: "event-store.POSTGRES_PSW"
  env:
    LOG_LEVEL: "info"
    FIXED_VALUE: "fixed_value"
    EXTERNAL_VALUE_ENV: "{{.Values.externalValue}}"
  envFromConfigmaps:
    WELL_KNOWN_URLS: "common-jwt.WELL_KNOWN_URLS"
  envFromSecrets:
    SOME_SECRET: "secret-map.SECRET_KEY"
