name: "nodejs-service"
namespace: "test-namespace"
techStack: "nodejs"

externalValue: "some_value"

service:
  create: true
  containerPort: 8807
  portName: myPort
  additionalPorts:
    - name: monitoring
      containerPort: 9095
      protocol: TCP
    - name: management
      containerPort: 8558
      protocol: TCP

serviceAccount:
  roleArn: "arn:aws:iam::000000000:role/interop-iam-service-dev-nodejs-service"

configmap:
  POSTGRES_DB_CM: "postgres_db"
  POSTGRES_SCHEMA: "test-namespace_myschema"
  EXTERNAL: "{{.Values.externalValue}}"

deployment:
  replicas: 2
  image:
    repositoryPrefix: "000000000000.dkr.ecr.eu-central-1.amazonaws.com"
    imagePullPolicy: Always
    tag: $IMAGE_TAG_PLACEHOLDER
    digest: $IMAGE_DIGEST_PLACEHOLDER
  resources:
    limits:
      cpu: "500m"
      memory: "1Gi"
    requests:
      cpu: "500m"
      memory: "1Gi"
  livenessProbe:
    httpGet:
      path: "/service/0.0/status"
      port: http
    initialDelaySeconds: 15
    periodSeconds: 5
  readinessProbe:
    httpGet:
      path: "/service/0.0/status"
      port: http
    initialDelaySeconds: 15
    periodSeconds: 5
  flywayInitContainer:
    create: true
    migrationsConfigmap: "common-db-migrations"
    env:
      FLYWAY_URL: jdbc:postgresql://$(POSTGRES_HOST):$(POSTGRES_PORT)/$(POSTGRES_DB)
      FLYWAY_CREATE_SCHEMAS: "true"
      FLYWAY_PLACEHOLDER_REPLACEMENT: "true"
      FLYWAY_SCHEMAS_ENV: "{{.Values.name}}.POSTGRES_SCHEMA"
      POSTGRES_HOST: "HOST"
      POSTGRES_PORT: "PORT"
      POSTGRES_DB: "DB"
      EXTERNAL_ENV: "{{.Values.externalValue}}"
    envFromConfigmaps:
      FLYWAY_SCHEMAS: "nodejs-service.POSTGRES_SCHEMA"
      FLYWAY_PLACEHOLDERS_APPLICATIONSCHEMA: "nodejs-service.POSTGRES_SCHEMA"
      POSTGRES_HOST_CM: "common-event-store.EVENTSTORE_DB_HOST"
      POSTGRES_PORT_CM: "common-event-store.EVENTSTORE_DB_PORT"
      POSTGRES_DB_EXT_CM: "common-event-store.EVENTSTORE_DB_NAME"
    envFromSecrets:
      FLYWAY_USER: "postgres.POSTGRES_USR"
      FLYWAY_PASSWORD: "postgres.POSTGRES_PSW"
  command: ["bin/nodejs-service"]
  args: 
    - "-Dconfig.override_with_env_vars=true"
    - ""
    - "-Dconfig.override_with_env_vars=true2222"
  envFromFieldRef:
    NAMESPACE: "metadata.name"
  env:
    REQUIRED_CONTACT_POINT_NR: "{{.Values.deployment.replicas}}"
    NAMES_WELL_KNOWN_URLS: "{{.Values.name}}.WELL_KNOWN_URLS"
  envFromConfigmaps:
    WELL_KNOWN_URLS: "common-jwt.WELL_KNOWN_URLS"
    AGREEMENT_MANAGEMENT_URL: "common-services-urls.AGREEMENT_MANAGEMENT_URL"
    ATTRIBUTE_REGISTRY_MANAGEMENT_URL: "common-services-urls.ATTRIBUTE_REGISTRY_MANAGEMENT_URL"
    POSTGRES_HOST: "interop-be-db-commons.POSTGRES_HOST"
    POSTGRES_PORT: "interop-be-db-commons.POSTGRES_PORT"
    POSTGRES_DB: "interop-be-db-commons.POSTGRES_DB"
  envFromSecrets:
    POSTGRES_USR: "postgres.POSTGRES_USR"
    POSTGRES_PSW: "postgres.POSTGRES_PSW"